#!/bin/sh
#  Use your phone as a mic through mumble
#
# github.com/pzmarzly/mic_over_mumble
#    Copyright 2018 Pawel Zmarzly
#          MIT License
#
# I claim no credit, this is a version with a few changes, notably:
#  - not requiring the terminal to stay open (run `mic &!`)
#  - removing functions, the original used way too many
#   (function > function > pipe into function
#    which has a name longer than the command)
# shellcheck disable=SC2086

#  toggle mic
{ [ "$1" = on ]  && echo true > /tmp/mic; } ||
{ [ "$1" = off ] && echo false > /tmp/mic; } && set -- toggle
[ "$1" = toggle ] || [ "$1" = query ] && {
	#input=$(pactl list sink-inputs | grep -i 'media.name = "Mumble' -B20 \
	#	| grep -o 'Input #[0-9]\+')
	#input=$(pactl list sources | grep -i '\bName: alsa_input.pci-0000_00_1b.0.analog-stereo' -B3 \
	input=$(pactl list sources | grep -i '\bName: alsa.*Antlion' -B3 \
		| grep -o 'Source #[0-9]\+')

	[ "$input" ] || { notify-send "mic is not running"; exit 1; }
	touch /tmp/mic
	read -r v < /tmp/mic

	case $v in
		true) a=false b=unmuted c=1200 d= h=00aaff;;
		*) a=true b=muted c=800 d=- h=ff0000
	esac

	if [ "$1" = query ]; then
		[ "$v" = true ] && b=muted || b=unmuted; c=300
	else
		echo "$a" > /tmp/mic
		#pactl set-sink-input-mute "${input##*#}" "$a"
		pactl set-source-mute "${input##*#}" "$a"
	fi

	xset ${d}led

	#exec dunstify -r 20 -t "$c" "$b"
	#exec micbar "$a"
	#exec sudo python $HOME/src/g403-led/g403-led.py solid "$h"

	## dunstrc:
	# [mike]
	# 	background     = "#b6d0fd"
	# 	summary        = "muted"
	# 	format         = " ​ "
	# 	history_ignore = yes
	#
	# [mic]
	# 	background     = "#eb9797"
	# 	summary        = "unmuted"
	# 	format         = "​        ​"
	# 	history_ignore = yes
}

exit

exec 2>/dev/null
[ "$(pgrep -x "${0##*/}")" = $$ ] || exit 1
trap 'pkill mumble' 2

# prepare environment
mkdir -p "${XDG_DATA_HOME:=$HOME/.local/share}/mic-mumble"

cd "$XDG_DATA_HOME/mic-mumble" || exit 1
#rm murmur*   # idk it sometimes doesnt work without this.. :shrug:

echo "bonjour=true" > murmur.ini
echo "bandwidth=130000" >> murmur.ini

if [ ! -e ./initdone ]; then
	echo "You will need to configure Mumble client to use the lowest possible latency."
	echo "We will start Mumble now. Please complete setup wizard and go to settings to increase quality and decrease latency."
	echo "Also, mute your microphone (if you have one) in Mumble."
	echo "Then exit Mumble."
	mumble |:
	touch ./initdone
fi

# set up
echo "Starting Mumble server (murmurd)..."
murmurd -ini ./murmur.ini &
# Murmur forks, so the PID acquired by `$!`
# wouldn't help us much.
sleep 5

echo "Starting Mumble client..."
mumble "mumble://localhost" |: &
mumble_pid=$!
# Mumble is slow to launch, and the
# user may need to click on OK button.
sleep 8

echo "Changing PulseAudio configuration..."
echo "Adding sink..."
moduleid=$(pactl load-module \
	module-null-sink \
	sink_name=Loopback_of_Mumble \
	sink_properties=device.description=Loopback_of_Mumble)
sleep 1

var=$(pacmd list-sinks | grep -i -B2 'loopback_of_mumble')
set -- ${var##*index:?}
sinkid=$1

var=$(pacmd list-sink-inputs | grep -B20 -e 'client.*Mumble')
set -- ${var##*index:?}
mumbleid=$1

pacmd move-sink-input "$mumbleid" "$sinkid"

echo "Adding a virtual microphone..."
SOURCE_MODULEid=$(pactl load-module \
	module-virtual-source \
	source_name=VirtualMic \
	master=Loopback_of_Mumble.monitor \
	source_properties=device.description=VirtualMic)

pactl set-default-source VirtualMic

echo "Done."

wait $mumble_pid

echo "Shutting down..."
sleep 2
echo "Stopping Mumble server..."
pkill murmurd
echo "Restoring PulseAudio configuration..."
pactl unload-module "$moduleid"
pactl unload-module "$SOURCE_MODULEid"
